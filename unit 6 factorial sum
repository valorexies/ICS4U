#Alexia Lee
#ICS4U1 Unit 6 Factorial Sum
#30/11/23

#calculates the factorial of the number given and returns it back to program when called

#performs 2 error checks and loops until true. 


def get_n():
    """ asks user to input a number and checks if the value entered is an integer and if it is above 0.
    Function loops until user enters a valid input.
    function will stop loop when user enters 0

    Args: ValueError - checks if the value is correct; checks for integer or string
          previous - a list of all the factorials
          factorial_sum - all the factorials of the numbers given which is then appended into 'previous' list

    factorial(n) - if number is over 0 and not a string then it passes and program continues

    Assumption: n > 0, int(n)

    Return: returns factorial_sum and previous back into main function to then be added up and print the factorial sum. 


    """

    previous = []

    x = True
    while x:
        n = input("Input a valid number: ")

        #checks f value inputted is an integer and it's value is above 0
        try:
            n = int(n)

            if n == 0:
                print("Stopping loop.")
                break

            #1st error check, checks if the integer is over 0, if it is then factorial() is called

            elif n > 0:
                
                factorial_sum = factorial(n)
                previous.append(factorial_sum)
                #print("The factorial sum of", previous, "is", factorial_sum)
                

            #if integer is below 0 then, this will proceed    
            else:
                print("Integer can not be a negative number. Please try again.")
                continue

        #2nd error check, checks if value entered is a string or integer
        except ValueError:
            print("This is a string, not an integer. Please try again.")
            continue
    
    return factorial_sum, previous


def factorial(n):
    """" determines the factorial of the number given

    Args: n - number to count down from

    Assumption: n > 0 and n(int)

    Returns: n(int) - after going through the calculations, n should be returned as an integer.
  
    """
    
    factorial_numbers = []

    for x in range (1, n):
        n = x * n
        #x -= 1
    factorial_numbers.append(n)
    
    factorial_sum = sum1(factorial_numbers)
    return factorial_sum

    
def sum1(factorial_numbers):
    factorial_sum = sum(factorial_numbers)
    return factorial_sum


def main():
    """ the main function that prints everything

    Args: factorial_sum and previous returned from function get_n()
    returning factorial_sum ensures that there is no TypeError displayed 
    previous - all the factorials
    sum(factorials) - the factorial sum 
    
    
    """
    factorial_sum, previous = get_n()
    print("The factorial sum of", previous, "is", sum(previous))


main()


# tests
# factorials inputted             output
# 3, 5, 8, 2                      The factorial sum of [6, 120, 40320, 2] is 40448
# 7, 8, 1, 4                      The factorial sum of [5040, 40320, 1, 24] is 45385
# 12, 31, 2                       The factorial sum of [479001600, 8222838654177922817725562880000000, 2] is 8222838654177922817725563359001602
# a, j, 2                         This is a string, not an integer. Please try again. 
#                                 This is a string, not an integer. Please try again.
#                                 The factorial sum of [2] is 2
# -3, -2                          Integer can not be a negative number. Please try again. /n Integer can not be a negative number. Please try again.

